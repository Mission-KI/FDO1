# generated by datamodel-codegen:
#   filename:  0.DOIP_Op.ERROR-Response.json
#   version:   0.26.0

from __future__ import annotations

from typing import Literal, Optional

from pydantic import BaseModel, Extra, Field


class Output(BaseModel):
    class Config:
        extra = Extra.forbid

    message: Optional[str] = Field(
        None, description='A message to explain the error in more detail'
    )


class ERRORResponse(BaseModel):
    class Config:
        extra = Extra.forbid

    requestId: Optional[str] = Field(
        None,
        description='requestId: the identifier of the request to which this is a response. The DOIP service must include in its response the requestId provided by the client.',
    )
    status: Literal[
        '0.DOIP/Status.101',
        '0.DOIP/Status.102',
        '0.DOIP/Status.103',
        '0.DOIP/Status.104',
        '0.DOIP/Status.105',
        '0.DOIP/Status.200',
        '0.DOIP/Status.500',
    ] = Field(
        ...,
        description='status: an identifier that indicates the status of the request. Status codes shall have associated unique identifiers resolvable as specified in the IRP.',
    )
    output: Output
